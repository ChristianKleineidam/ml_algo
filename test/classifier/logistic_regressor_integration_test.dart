import 'package:dart_ml/src/classifier/logistic_regression.dart';
import 'package:dart_ml/src/optimizer/learning_rate_generator/type.dart';
import 'package:simd_vector/vector.dart';
import 'package:test/test.dart';

void main() {
  LogisticRegressor classifier;

  group('Logistic regressor', () {
    setUp(() {
      classifier = new LogisticRegressor(batchSize: 5, iterationLimit: 2, learningRateType: LearningRateType.constant,
        learningRate: 1.0);
    });

    test('shoudl extract class labels from the data', () {
      final features = [
        new Float32x4Vector.from([5.0, 7.0, 6.0]),
        new Float32x4Vector.from([1.0, 2.0, 3.0]),
        new Float32x4Vector.from([10.0, 12.0, 31.0]),
        new Float32x4Vector.from([9.0, 8.0, 5.0]),
        new Float32x4Vector.from([4.0, 0.0, 1.0]),
        new Float32x4Vector.from([4.0, 0.0, 1.0]),
        new Float32x4Vector.from([4.0, 0.0, 1.0])
      ];
      final labels = new Float32x4Vector.from([3.0, 1.0, 3.0, 2.0, 2.0, 0.0, 0.0]);
      classifier.fit(features, labels);

      expect(classifier.classLabels, equals([3.0, 1.0, 2.0, 0.0]));
    });

    test('should properly fit given data', () {
      final features = [
        new Float32x4Vector.from([5.0, 7.0, 6.0]),
        new Float32x4Vector.from([1.0, 2.0, 3.0]),
        new Float32x4Vector.from([10.0, 12.0, 31.0]),
        new Float32x4Vector.from([9.0, 8.0, 5.0]),
        new Float32x4Vector.from([4.0, 0.0, 1.0])
      ];
      final labels = new Float32x4Vector.from([0.0, 1.0, 1.0, 2.0, 0.0]);
      classifier.fit(features, labels);

      // given data
      // -----------------------------------------
      // | X (features):      | Y (class labels):|
      // ----------------------------------------|
      // | [5.0, 7.0, 6.0]    | [0.0]            |
      // | [1.0, 2.0, 3.0]    | [1.0]            |
      // | [10.0, 12.0, 31.0] | [1.0]            |
      // | [9.0, 8.0, 5.0]    | [2.0]            |
      // | [4.0, 0.0, 1.0]    | [0.0]            |
      // -----------------------------------------
      //
      // formula for derivative:
      // sum(x_i_j * (indicator(y=1) - P(y=1|x_i,w)))
      //
      // formula for the update:
      // w_new = w_prev + eta * derivative (gradient ascent)
      //
      // ===============================================================================================================
      // ITERATION 1
      // ===============================================================================================================
      //
      // weights for class 0.0:
      // current weights: [0.0, 0.0, 0.0]
      // 5.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0])))) - dot sign means dot product
      // 7.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      // 6.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      // -----------------------------------------------------------------
      // [2.5, 3.5, 3.0]
      //
      // 1.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 2.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 3.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      //-----------------------------------------------------------------
      // [-0.5, -1.0, -1.5]
      //
      // 10.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 12.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 31.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      //-----------------------------------------------------------------
      // [-5.0, -6.0, -15.5]
      //
      // 9.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 8.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 5.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      //-----------------------------------------------------------------
      // [-4.5, -4.0, -2.5]
      //
      // 4.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 0.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 1.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      //-----------------------------------------------------------------
      // [2.0, 0.0, 0.5]
      //
      // derivative (sum up all the vectors above):
      // [-5.5, -7.5, -16.0]
      //
      // update:
      // [0.0, 0.0, 0.0] + eta * [-5.5, -7.5, -16.0] = [0.0, 0.0, 0.0] + 1.0 * [-5.5, -7.5, -16.0] = [-5.5, -7.5, -16.0]
      //
      // weights for class 1.0:
      // current weights: [0.0, 0.0, 0.0]
      // 5.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0])))) - dot sign means dot product
      // 7.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      // 6.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      //-----------------------------------------------------------------
      // [-2.5, -3.5, -3.0]
      //
      // 1.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 2.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 3.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      //-----------------------------------------------------------------
      // [0.5, 1.0, 1.5]
      //
      // 10.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 12.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 31.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      //-----------------------------------------------------------------
      // [5.0, 6.0, 15.5]
      //
      // 9.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 8.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 5.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      //-----------------------------------------------------------------
      // [-4.5, -4.0, -2.5]
      //
      // 4.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 0.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 1.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      //-----------------------------------------------------------------
      // [-2.0, 0.0, -0.5]
      //
      // derivative:
      // [-3.5, -0.5, 11.0]
      //
      // update:
      // [0.0, 0.0, 0.0] + eta * [-3.5, -0.5, 11.0] = [0.0, 0.0, 0.0] + 1.0 * [-3.5, -0.5, 11.0] = [-3.5, -0.5, 11.0]
      //
      // weights for class 2.0:
      // current weights: [0.0, 0.0, 0.0]
      // 5.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0])))) - dot sign means dot product
      // 7.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      // 6.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      //-----------------------------------------------------------------
      // [-2.5, -3.5, -3.0]
      //
      // 1.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 2.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 3.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      //-----------------------------------------------------------------
      // [-0.5, -1.0, -1.5]
      //
      // 10.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 12.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 31.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      //-----------------------------------------------------------------
      // [-5.0, -6.0, -15.5]
      //
      // 9.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 8.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 5.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      //-----------------------------------------------------------------
      // [4.5, 4.0, 2.5]
      //
      // 4.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 0.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 1.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      //-----------------------------------------------------------------
      // [-2.0, 0.0, -0.5]
      //
      // derivative:
      // [-5.5, -6.5, -18.0]
      //
      // update:
      // [0.0, 0.0, 0.0] + eta * [-5.5, -6.5, -18.0] = [0.0, 0.0, 0.0] + 1.0 * [-5.5, -6.5, -18.0] = [-5.5, -6.5, -18.0]
      //
      // ===============================================================================================================
      // ITERATION 2
      // ===============================================================================================================
      // weights for class 0.0:
      // current weights: [-5.5, -7.5, -16.0]
      // 5.0 * (1 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[5.0, 7.0, 6.0]))))
      // 7.0 * (1 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[5.0, 7.0, 6.0]))))
      // 6.0 * (1 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[5.0, 7.0, 6.0]))))
      // -----------------------------------------------------------------
      // [5.0, 7.0, 6.0]
      //
      // 1.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[1.0, 2.0, 3.0]))))
      // 2.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[1.0, 2.0, 3.0]))))
      // 3.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[1.0, 2.0, 3.0]))))
      //-----------------------------------------------------------------
      // [-3.66e-77, -7.33e-77, -1.1e-76]
      //
      // 10.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[10.0, 12.0, 31.0]))))
      // 12.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[10.0, 12.0, 31.0]))))
      // 31.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[10.0, 12.0, 31.0]))))
      //-----------------------------------------------------------------
      // [-3.66e-76, -4.39e-76, -1.13e-75]
      //
      // 9.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[9.0, 8.0, 5.0]))))
      // 8.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[9.0, 8.0, 5.0]))))
      // 5.0 * (0 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[9.0, 8.0, 5.0]))))
      //-----------------------------------------------------------------
      // [-3.3e-76, -2.93e-76, -1.83e-76]
      //
      // 4.0 * (1 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[4.0, 0.0, 1.0]))))
      // 0.0 * (1 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[4.0, 0.0, 1.0]))))
      // 1.0 * (1 - (1 / (1 + exp(-1 * [-5.5, -7.5, -16.0].[4.0, 0.0, 1.0]))))
      //-----------------------------------------------------------------
      // [4.0, 0.0, 1.0]
      //
      // derivative (sum up all the vectors above):
      // [9.0, 7.0, 7.0]
      //
      // update:
      // [-5.5, -7.5, -16.0] + eta * [9.0, 7.0, 7.0] = [-5.5, -7.5, -16.0] + 1.0 * [9.0, 7.0, 7.0] = [3.5, -0.5, -9.0]
      //
      // weights for class 1.0:
      // current weights: [-3.5, -0.5, 11.0],
      // 5.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[5.0, 7.0, 6.0]))))
      // 7.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[5.0, 7.0, 6.0]))))
      // 6.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[5.0, 7.0, 6.0]))))
      //-----------------------------------------------------------------
      // [-5.0, -7.0, -6.0]
      //
      // 1.0 * (1 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[1.0, 2.0, 3.0]))))
      // 2.0 * (1 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[1.0, 2.0, 3.0]))))
      // 3.0 * (1 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[1.0, 2.0, 3.0]))))
      //-----------------------------------------------------------------
      // [4.19e-13, 8.38e-13, 1.25e-12]
      //
      // 10.0 * (1 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[10.0, 12.0, 31.0]))))
      // 12.0 * (1 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[10.0, 12.0, 31.0]))))
      // 31.0 * (1 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[10.0, 12.0, 31.0]))))
      //-----------------------------------------------------------------
      // [0.0, 0.0, 0.0]
      //
      // 9.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[9.0, 8.0, 5.0]))))
      // 8.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[9.0, 8.0, 5.0]))))
      // 5.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[9.0, 8.0, 5.0]))))
      //-----------------------------------------------------------------
      // [-8.9, -7.9, -4.9]
      //
      // 4.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[4.0, 0.0, 1.0]))))
      // 0.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[4.0, 0.0, 1.0]))))
      // 1.0 * (0 - (1 / (1 + exp(-1 * [-3.5, -0.5, 11.0].[4.0, 0.0, 1.0]))))
      //-----------------------------------------------------------------
      // [-0.189, 0.0, -0.047]
      //
      // derivative:
      // [-14.18, -14.89, -10.94]
      //
      // update:
      // [-3.5, -0.5, 11.0] + eta * [-14.18, -14.89, -10.94] = [-3.5, -0.5, 11.0] + 1.0 * [-14.18, -14.89, -10.94] =
      // = [-17.68, -15.4, -0.06]
      //
      // weights for class 2.0:
      // 5.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0])))) - dot sign means dot product
      // 7.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      // 6.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[5.0, 7.0, 6.0]))))
      //-----------------------------------------------------------------
      // [-2.5, -3.5, -3.0]
      //
      // 1.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 2.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      // 3.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[1.0, 2.0, 3.0]))))
      //-----------------------------------------------------------------
      // [-0.5, -1.0, -1.5]
      //
      // 10.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 12.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      // 31.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[10.0, 12.0, 31.0]))))
      //-----------------------------------------------------------------
      // [-5.0, -6.0, -15.5]
      //
      // 9.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 8.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      // 5.0 * (1 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[9.0, 8.0, 5.0]))))
      //-----------------------------------------------------------------
      // [4.5, 4.0, 2.5]
      //
      // 4.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 0.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      // 1.0 * (0 - (1 / (1 + exp(-1 * [0.0, 0.0, 0.0].[4.0, 0.0, 1.0]))))
      //-----------------------------------------------------------------
      // [-2.0, 0.0, -0.5]
      //
      // derivative:
      // [-5.5, -6.5, -18.0]
      //
      // update:
      // [0.0, 0.0, 0.0] + eta * [-5.5, -6.5, -18.0] = [0.0, 0.0, 0.0] + 1.0 * [-5.5, -6.5, -18.0] = [-5.5, -6.5, -18.0]
      expect(classifier.weightsByClasses[0], equals([3.5, -0.5, -9.0]));
      expect(classifier.weightsByClasses[1], equals([-17.68, -15.4, -0.06]));
//      expect(classifier.weightsByClasses[2], equals([3.5, -0.5, -9.0]));
//      expect(classifier.weightsByClasses, equals([
//        [-5.5, -7.5, -16.0],
//        [-3.5, -0.5, 11.0],
//        [-5.5, -6.5, -18.0]
//      ]));
    });
  });
}
